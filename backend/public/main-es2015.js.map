{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/auth/auth.service.ts","./src/app/core/core.module.ts","./src/app/core/module-import-guard.ts","./src/app/core/token/token.service.ts","./src/app/routes/pages/login/login.component.ts","./src/app/routes/pages/login/login.component.html","./src/app/routes/pages/pages.module.ts","./src/app/routes/pages/recover/recover.component.ts","./src/app/routes/pages/recover/recover.component.html","./src/app/routes/pages/register/register.component.ts","./src/app/routes/pages/register/register.component.html","./src/app/routes/routes.module.ts","./src/app/routes/routes.ts","./src/app/shared/helpers/must-match.validator.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { RoutesModule } from './routes/routes.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    CoreModule,\n    SharedModule.forRoot(),\n    RoutesModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private baseUrl = environment.apiUrl;\n\n\n  constructor(private http: HttpClient) {}\n\n  signup(payLoad) {\n    return this.http.post(`${this.baseUrl}/signup`, payLoad)\n  }\n\n  login(payLoad) {\n    return this.http.post(`${this.baseUrl}/login`, payLoad);\n  }\n\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\nimport { throwIfAlreadyLoaded } from './module-import-guard';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { TokenService } from './token/token.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n    ],\r\n    providers: [\r\n        AuthService,\r\n        TokenService\r\n    ],\r\n    declarations: [\r\n    ],\r\n    exports: [\r\n    ]\r\n})\r\nexport class CoreModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\r\n        throwIfAlreadyLoaded(parentModule, 'CoreModule');\r\n    }\r\n}\r\n","// https://angular.io/styleguide#!#04-12\r\nexport function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n    if (parentModule) {\r\n      throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor() { }\n\n  handle(token) {\n    this.set(token);\n  }\n\n  set(token) {\n    localStorage.setItem('token', token);\n  }\n\n  get() {\n    return localStorage.getItem('token');\n  }\n\n  remove() {\n    localStorage.removeItem('token');\n  }\n\n  isValid() {\n\n    const token = this.get();\n    if(token) {\n      const payload = this.payload(token);\n    }\n  }\n\n  payload(token) {\n    const payload = token.split('.')[1];\n    return this.decode(payload);\n  }\n\n  decode(payload) {\n    return JSON.parse(atob(payload));\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { TokenService } from 'src/app/core/token/token.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    error = null;\n    valForm: FormGroup;\n\n    constructor(\n        public fb: FormBuilder, \n        private authService: AuthService,\n        private tokenService: TokenService\n    ) {\n\n        this.valForm = fb.group({\n            'email': ['', [Validators.required, Validators.email]],\n            'password': [null, Validators.required]\n        });\n\n    }\n\n    submitForm($ev, value: any) {\n        $ev.preventDefault();\n        for (let c in this.valForm.controls) {\n            this.valForm.controls[c].markAsTouched();\n        }\n        if (this.valForm.valid) {\n            console.log('Valid!');\n            console.log(value);\n            console.log(JSON.stringify(this.valForm.value));\n            this.error = null;\n            return this.authService.login(value).subscribe(\n              data => this.handleResponse(data),\n              err  => this.handleError(err)\n            );\n        }\n    }\n\n    handleResponse(data) {\n        this.tokenService.handle(data.access_token);\n    }\n\n    handleError(error) {\n      console.log(error.error.error);\n      this.error = error.error.error;\n    }\n    ngOnInit() {\n\n    }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"block-center mt-4 wd-xl\">\n        <!-- START card-->\n        <div class=\"card card-flat\">\n            <div class=\"card-header text-center bg-dark\">\n                <a href=\"#\">\n                    <img class=\"block-center rounded\" src=\"assets/img/logo.png\" alt=\"Image\" />\n                </a>\n            </div>\n            <div class=\"card-body\">\n                <p class=\"text-center py-2\">SIGN IN TO CONTINUE.</p>\n                <form [formGroup]=\"valForm\" class=\"form-validate mb-3\" role=\"form\" name=\"loginForm\" novalidate=\"\" (submit)=\"submitForm($event, valForm.value)\">\n                    <div class=\"alert alert-danger\" *ngIf=\"error\">{{error}}</div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group with-focus\">\n                            <input class=\"form-control border-right-0\" id=\"exampleInputEmail1\" type=\"email\" name=\"email\" placeholder=\"Enter email\" autocomplete=\"off\" formControlName=\"email\" required=\"\" />\n                            <div class=\"input-group-append\">\n                                <span class=\"input-group-text text-muted bg-transparent border-left-0\">\n                                    <em class=\"fa fa-envelope\"></em>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"text-danger\" *ngIf=\"valForm.controls['email'].hasError('required') && (valForm.controls['email'].dirty || valForm.controls['email'].touched)\">This field is required</div>\n                        <div class=\"text-danger\" *ngIf=\"valForm.controls['email'].hasError('email') && (valForm.controls['email'].dirty || valForm.controls['email'].touched)\">This field must be a valid email address</div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group with-focus\">\n                            <input class=\"form-control border-right-0\" id=\"exampleInputPassword1\" type=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\" required=\"\" />\n                            <div class=\"input-group-append\">\n                                <span class=\"input-group-text text-muted bg-transparent border-left-0\">\n                                    <em class=\"fa fa-lock\"></em>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"text-danger\" *ngIf=\"valForm.controls['password'].hasError('required') && (valForm.controls['password'].dirty || valForm.controls['password'].touched)\">This field is required</div>\n                    </div>\n                    <div class=\"clearfix\">\n                        <div class=\"checkbox c-checkbox float-left mt0\">\n                            <label>\n                                <input type=\"checkbox\" value=\"\" name=\"account_remember\" />\n                                <span class=\"fa fa-check\"></span>Remember Me</label>\n                        </div>\n                        <div class=\"float-right\">\n                            <a class=\"text-muted\" [routerLink]=\"'/recover'\">Forgot your password?</a>\n                        </div>\n                    </div>\n                    <button class=\"btn btn-block btn-primary mt-3\" type=\"submit\">Login</button>\n                </form>\n                <!-- <div class=\"alert alert-danger text-center\" ></div> -->\n                <p class=\"pt-3 text-center\">Need to Signup?</p>\n                <a class=\"btn btn-block btn-secondary\" [routerLink]=\"'/register'\">Register Now</a>\n            </div>\n        </div>\n        <!-- END card-->\n        <!-- <div class=\"p-3 text-center\">\n            <span>&copy;</span>\n            <span>{{ settings.getAppSetting('year') }}</span>\n            <span class=\"mx-2\">-</span>\n            <span>{{ settings.getAppSetting('name') }}</span>\n            <br/>\n            <span>{{ settings.getAppSetting('description') }}</span>\n        </div> -->\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { RecoverComponent } from './recover/recover.component'; \r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        RecoverComponent\r\n    ],\r\n    exports: [\r\n        RouterModule,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        RecoverComponent\r\n    ]\r\n})\r\nexport class PagesModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recover',\n  templateUrl: './recover.component.html',\n  styleUrls: ['./recover.component.scss']\n})\nexport class RecoverComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>recover works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { MustMatch } from '../../../shared/helpers/must-match.validator';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n    valForm: FormGroup;\n    passwordForm: FormGroup;\n    error = [];\n\n    constructor(public fb: FormBuilder, private authService: AuthService) {\n\n        let password = new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9]{6,10}$')]));\n        let certainPassword = new FormControl('', Validators.required);\n\n        this.passwordForm = fb.group({\n            'password': password,\n            'confirmPassword': certainPassword\n        }, {\n            validator: MustMatch('password', 'confirmPassword')\n        });\n\n        this.valForm = fb.group({\n            'name': [null, Validators.required],\n            'email': [null, [Validators.required, Validators.email]],\n            // 'accountagreed': [null, Validators.required],\n            'passwordGroup': this.passwordForm\n        });\n    }\n\n    submitForm($ev, value: any) {\n        $ev.preventDefault();\n        for (let c in this.valForm.controls) {\n            this.valForm.controls[c].markAsTouched();\n        }\n        for (let c in this.passwordForm.controls) {\n            this.passwordForm.controls[c].markAsTouched();\n        }\n\n        if (this.valForm.valid) {\n            console.log('Valid!');\n            console.log(value);\n            this.error = null;\n            let payLoad = {name: value.name, email: value.email, password: value.passwordGroup.password, password_confirmation: value.passwordGroup.confirmPassword};\n            this.error = [];\n            return this.authService.signup(payLoad).subscribe(\n              data => console.log(data),\n              err  => this.handleError(err)\n            );\n        }\n    }\n\n    handleError(error) {\n      console.log(error.error.errors);\n      const errors = error.error.errors;\n      for (const property in errors) {\n        this.error = this.error || [];\n        this.error.push(errors[property][0]);\n      }\n    }\n\n    ngOnInit() {\n    }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"block-center mt-4 wd-xl\">\n        <!-- START card-->\n        <div class=\"card card-flat\">\n            <div class=\"card-header text-center bg-dark\">\n                <a href=\"#\">\n                    <img class=\"block-center rounded\" src=\"assets/img/logo.png\" alt=\"Image\" />\n                </a>\n            </div>\n            <div class=\"card-body\">\n                <p class=\"text-center py-2\">SIGNUP TO GET INSTANT ACCESS.</p>\n                <form [formGroup]=\"valForm\" class=\"form-validate mb-3\" role=\"form\" name=\"registerForm\" novalidate=\"\" (submit)=\"submitForm($event, valForm.value)\">\n                    <div class=\"alert alert-danger\" *ngIf=\"error != null && error.length > 0\">\n                        <ul *ngFor=\"let err of error\">\n                            <li>{{err}}</li>\n                        </ul>                        \n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"text-muted mb-1\">Name</label>\n                        <div class=\"input-group with-focus\">\n                            <input class=\"form-control border-right-0\" type=\"text\" name=\"account_name\" placeholder=\"Enter Name\" autocomplete=\"off\" formControlName=\"name\" required=\"\" />\n                            <div class=\"input-group-append\">\n                                <span class=\"input-group-text text-muted bg-transparent border-left-0\">\n                                    <em class=\"fa fa-user\"></em>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"text-danger\" *ngIf=\"valForm.controls['name'].hasError('required') && (valForm.controls['name'].dirty || valForm.controls['name'].touched)\">This field is required</div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"text-muted mb-1\">Email address</label>\n                        <div class=\"input-group with-focus\">\n                            <input class=\"form-control border-right-0\" type=\"email\" name=\"account_email\" placeholder=\"Enter email\" autocomplete=\"off\" formControlName=\"email\" required=\"\" />\n                            <div class=\"input-group-append\">\n                                <span class=\"input-group-text text-muted bg-transparent border-left-0\">\n                                    <em class=\"fa fa-envelope\"></em>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"text-danger\" *ngIf=\"valForm.controls['email'].hasError('required') && (valForm.controls['email'].dirty || valForm.controls['email'].touched)\">This field is required</div>\n                        <div class=\"text-danger\" *ngIf=\"valForm.controls['email'].hasError('email') && (valForm.controls['email'].dirty || valForm.controls['email'].touched)\">This field must be a valid email address</div>\n                    </div>\n                    <div formGroupName=\"passwordGroup\">\n                        <div class=\"form-group\">\n                            <label class=\"text-muted mb-1\">Password</label>\n                            <div class=\"input-group with-focus\">\n                                <input class=\"form-control border-right-0\" id=\"id-password\" type=\"password\" name=\"password\" placeholder=\"Enter Password\" formControlName=\"password\" [formControl]=\"valForm.get('passwordGroup.password')\" />\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text text-muted bg-transparent border-left-0\">\n                                        <em class=\"fa fa-lock\"></em>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class=\"text-danger\" *ngIf=\"valForm.get('passwordGroup.password').hasError('required') && (valForm.get('passwordGroup.password').dirty || valForm.get('passwordGroup.password').touched)\">This field is required</div>\n                            <div class=\"text-danger\" *ngIf=\"valForm.get('passwordGroup.password').hasError('pattern') && (valForm.get('passwordGroup.password').dirty || valForm.get('passwordGroup.password').touched)\">Input should match 'a-zA-Z0-9' and 6-10 length</div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"text-muted mb-1\">Confirm Password</label>\n                            <div class=\"input-group with-focus\">\n                                <input class=\"form-control border-right-0\" type=\"password\" name=\"confirmPassword\" placeholder=\"Enter Confirm Password\" formControlName=\"confirmPassword\" [formControl]=\"valForm.get('passwordGroup.confirmPassword')\" />\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text text-muted bg-transparent border-left-0\">\n                                        <em class=\"fa fa-lock\"></em>\n                                    </span>\n                                </div>\n                            </div>\n                            <div class=\"text-danger\" *ngIf=\"valForm.get('passwordGroup.confirmPassword').hasError('required') && (valForm.get('passwordGroup.confirmPassword').dirty || valForm.get('passwordGroup.confirmPassword').touched)\">This field is required</div>\n                            <div class=\"text-danger\" *ngIf=\"valForm.get('passwordGroup.confirmPassword').hasError('equalTo')\">Password does Not match</div>\n                        </div>\n                    </div>\n                    <!-- <div class=\"clearfix\">\n                        <div class=\"checkbox c-checkbox float-left mt0\">\n                            <label>\n                                <input type=\"checkbox\" required=\"\" name=\"account_agreed\" formControlName=\"accountagreed\" />\n                                <span class=\"fa fa-check\"></span>I agree with the\n                                <a href=\"#\">terms</a>\n                            </label>\n                        </div>\n                    </div>\n                    <span class=\"text-danger\" *ngIf=\"valForm.controls['accountagreed'].hasError('required') && (valForm.controls['accountagreed'].dirty || valForm.controls['accountagreed'].touched)\">You must agree the terms</span> -->\n                    <button class=\"btn btn-block btn-primary mt-3\" type=\"submit\">Create account</button>\n                </form>\n                <!-- <div class=\"alert alert-danger text-center\"></div> -->\n                <p class=\"pt-3 text-center\">Have an account?</p>\n                <a class=\"btn btn-block btn-secondary\" [routerLink]=\"'/login'\">Signup</a>\n            </div>\n        </div>\n        <!-- END card-->\n        <!-- <div class=\"p-3 text-center\">\n            <span>&copy;</span>\n            <span>{{ settings.getAppSetting('year') }}</span>\n            <span class=\"mx-2\">-</span>\n            <span>{{ settings.getAppSetting('name') }}</span>\n            <br/>\n            <span>{{ settings.getAppSetting('description') }}</span>\n        </div> -->\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { PagesModule } from './pages/pages.module';\r\n\r\nimport { routes } from './routes';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        RouterModule.forRoot(routes),\r\n        PagesModule\r\n    ],\r\n    declarations: [],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class RoutesModule {}","import { Routes } from '@angular/router';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { RecoverComponent } from './pages/recover/recover.component';\r\n\r\nexport const routes: Routes = [\r\n\r\n    // Not lazy-loaded routes\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'recover', component: RecoverComponent },\r\n\r\n    // Not found\r\n    { path: '**', redirectTo: 'login' }\r\n];","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ]\n})\nexport class SharedModule {\n  static forRoot(): ModuleWithProviders {\n      return {\n          ngModule: SharedModule\n      };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8000/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}